// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniJira.Api.Data;

#nullable disable

namespace MiniJira.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250729154409_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("MiniJira.Api.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("IssueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MiniJira.Api.Models.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssigneeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IssueStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IssueTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("IssueStatusId");

                    b.HasIndex("IssueTypeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("MiniJira.Api.Models.IssueStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("IssueStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "To Do",
                            Order = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "In Progress",
                            Order = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Done",
                            Order = 3
                        });
                });

            modelBuilder.Entity("MiniJira.Api.Models.IssueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IssueTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#E44D42",
                            Icon = "fa-bug",
                            Name = "Bug"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#4FADE6",
                            Icon = "fa-check-square",
                            Name = "Task"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#8E44AD",
                            Icon = "fa-bolt",
                            Name = "Epic"
                        });
                });

            modelBuilder.Entity("MiniJira.Api.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Default project for MiniJira",
                            Key = "DEF",
                            Name = "Default Project"
                        });
                });

            modelBuilder.Entity("MiniJira.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Administrator",
                            Email = "admin@minijira.com",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "User One",
                            Email = "user1@minijira.com",
                            Username = "user1"
                        });
                });

            modelBuilder.Entity("MiniJira.Api.Models.Comment", b =>
                {
                    b.HasOne("MiniJira.Api.Models.Issue", "Issue")
                        .WithMany("Comments")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniJira.Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Issue");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MiniJira.Api.Models.Issue", b =>
                {
                    b.HasOne("MiniJira.Api.Models.User", "Assignee")
                        .WithMany("AssignedIssues")
                        .HasForeignKey("AssigneeId");

                    b.HasOne("MiniJira.Api.Models.IssueStatus", "Status")
                        .WithMany("Issues")
                        .HasForeignKey("IssueStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniJira.Api.Models.IssueType", "IssueType")
                        .WithMany("Issues")
                        .HasForeignKey("IssueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniJira.Api.Models.Project", "Project")
                        .WithMany("Issues")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("IssueType");

                    b.Navigation("Project");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MiniJira.Api.Models.Issue", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("MiniJira.Api.Models.IssueStatus", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MiniJira.Api.Models.IssueType", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MiniJira.Api.Models.Project", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MiniJira.Api.Models.User", b =>
                {
                    b.Navigation("AssignedIssues");
                });
#pragma warning restore 612, 618
        }
    }
}
